module TickCounter

use import int.Int
use import ref.Ref

val ghost ticks: ref int

let ghost tick (): unit
writes { ticks }
ensures { !ticks = old (!ticks) + 1 }
 = ticks := !ticks + 1

end

module Promise

type obligation model { ghost mutable cookie: bool }

predicate satisfied (o: obligation) = o.cookie

predicate entangled (a b: bool)
  = a <-> b
function (?) (o: obligation): bool 
  = satisfied o

val reissue (o: obligation): unit
requires { satisfied o }
writes { o }

val delegate (dst src: obligation): unit
requires { satisfied dst -> satisfied src }
ensures { satisfied src }

end
